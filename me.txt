二遍进度: 全透明




1  反编译工具

写完kotlin，回顾这些


E:\new_computer\study\dongnao2\kotlin\1.视频教程\2\43.kotlin项目实战-手机影音（七）
E:\wangweijun\dongnao\kotlin\1.视频教程\1


完结张涛kotlin课程,

单向数据流的原则：只有数据源或数据所有者才应该负责更新其公开的数据

三种启动协程方式: runBlocking, launch, async<->await 不同方式的异同
单个线程上运行多个协程
viewModelScope.launch(Dispatchers.IO)指定协程在IO线程上执行

TabLayoutMediator本来是3个参数, 最后一个接口, 在kotlin使用lambda表达式替代

架构组件, kotlin 文档继续
解决新笔记本的环境搭建

1 kotlin官网基础
https://kotlinlang.org/docs/basic-syntax.html#print-to-the-standard-output


kotlin android官网教程

https://developer.android.google.cn/courses/android-basics-kotlin/course

第 1 单元：Kotlin 基础知识
第 2 单元：布局
第 3 单元：导航
第 4 单元：连接到互联网
第 5 单元：数据持久性
第 6 单元：工作管理器

进度   第 1 单元: 向应用中添加按钮ni

Kotlin 上的所有例子
https://github.com/orgs/google-developer-training/repositories?type=all

Kotlin 没有封装类
Kotlin 类型空值敏感
Kotlin 没有静态变量与静态的方法, 没有static关键字, 只有 JVMStatic

疑问: lambda 闭包会编译成一个 对象
如果lambda只有一个参数, 可以不写参数和 ->, 使用内置参数it获取

DSL 领域专用语言
外部DSL VS  内部DSL
外部DSL: JSON, XML, CSS, Makefile
内部DSL: Anko Kolley build.gradle (依赖语言)

内联的特殊情况
1 在kotlin中，内部的lambda是不容许中断外部函数执行
2 inline 的lambda可以中断外部函数

进程
线程: cpu来调度来控制
协程: 自己写代码来控制

协程: 可控制, 更加轻量, 语法糖:同步的写法,异步的操作

一个线程上可以运行多个协程

data class xxx 会编译成什么呀  ---> get set 方法

object 三种语义
匿名内部类；
单例模式；
伴生对象:
在定义一个类的同时还创建了对象


inline:
第一：只修饰高级函数
第二：只能修饰public函数，private不行

manifest.xml 合并规则

优先级 从低到高
三方库中manifest.xml -->  main  ---> buildType 中manifest.xml
冲突时，由高优先级的xml中tools指定规则

协程不可能脱离线程运行
协程可以理解为运行在线程当中的、更加轻量的 Task
携程虽然运行在线程之上，但是并不会和线程绑定，也就是说
携程是可以在线程之间切换

协程，可以理解为更加轻量的线程，成千上万个协程可以同时运行在一个线程当中；
协程，其实是运行在线程当中的轻量的 Task, 如果使用delay的话,不会阻塞下一个任务(通过挂起和恢复)
协程，不会与特定的线程绑定，它可以在不同的线程之间灵活切换
协程比线程多出了线程内部异步的能力

adb shell am start
            -W -a android.intent.action.VIEW
            -d <URI> <PACKAGE>

adb shell am start -W -a android.intent.action.VIEW -d "example://gizmos" com.wangweijun.myapplication

adb shell am start -W -a android.intent.action.VIEW -d "http://www.example.com/gizmos" com.wangweijun.myapplication


########### 删除路径之后，<data>放在一起可以交叉调用 ###############

adb shell am start -W -a android.intent.action.VIEW -d "example://gizmos" com.wangweijun.myapplication

adb shell am start -W -a android.intent.action.VIEW -d "http://www.example.com" com.wangweijun.myapplication

adb shell am start -W -a android.intent.action.VIEW -d "example://www.example.com" com.wangweijun.myapplication

adb shell am start -W -a android.intent.action.VIEW -d "http://gizmos" com.wangweijun.myapplication

